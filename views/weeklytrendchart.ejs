<!doctype>
<html>
<head>
<link type="text/css" rel="stylesheet" href="lib/rickshaw/rickshaw.min.css">
<script src="lib/rickshaw/vendor/d3.min.js"></script>
<script src="lib/rickshaw/vendor/d3.layout.min.js"></script>
<script src="lib/rickshaw/rickshaw.js"></script>

<!-- End Google Analytics -->

</script>

<style>
.titleleft {
	display : block;
	position: relative;
	font-size: 12px;
	font-family: Arial, sans-serif;
	color : black;
	margin-left:150px;
	padding : 10px;
	text-transform: uppercase;
}


#chart_container {
	position: relative;
	display: inline-block;
	font-family: Arial, Helvetica, sans-serif;
	background :white;
}
#chart {
	display: inline-block;
	margin-left: 40px;
}
#y_axis {
	position: absolute;
	top: 0;
	bottom: 0;
	width: 40px;
	color: black;
}
#legend {
	display: block;
	color : black;
	background :white;
}


.line {
	display: inline-block;
	margin: 0 0 0 10px;
	padding: 5px;
}

.rickshaw_legend{
padding: 2px;
margin-left: 22px;
}

.rickshaw_graph .x_tick .title{
	opacity:1;
} 

.rickshaw_graph .y_ticks text, .rickshaw_graph .x_ticks_d3 text{
	opacity:1;
}


</style>
</head>
<body>
<div>
	<div id="chart_container">
		<div id="y_axis"></div>
		<div id="chart"></div>
	</div>
	<div id="legend">
	</div>
</div>

<script>


function formatDate(millis) {
  var date = new Date(millis);
  var hours = date.getHours();
  var minutes = date.getMinutes();
  var ampm = hours >= 12 ? 'pm' : 'am';
  hours = hours % 12;
  hours = hours ? hours : 12; // the hour '0' should be '12'
  minutes = minutes < 10 ? '0'+minutes : minutes;
  var strTime = hours + ':' + minutes + ' ' + ampm;
  return strTime;
}

var weekAverage;

var url = '/weeklytrenddata/<%= metricid %>/<%= date %>/0';
var palette = new Rickshaw.Color.Palette();
d3.json(url, function (metrics, err) {
	console.log("metrics : "+ JSON.stringify(metrics));
	weekAverage = metrics.avgvalue;
	var data = [];
	var avg  = [];
	var future = [];
	var count = 1;
	var seriesData = [];
	var b1 = metrics.b1;
	var b0 = metrics.b0;
	var maxTime=0;
	metrics.metricData[0].metricValues.forEach(function (app) {
		var startTime = app.startTimeInMillis*1;
		if(startTime > maxTime)
			maxTime = startTime;
	
	    var x = app.startTimeInMillis/1000;
	    var date = new Date(app.startTimeInMillis);
	    //console.log("date : "+date.toString()+ " raw = "+app.startTimeInMillis+" maxStartTime "+maxTime);
		data.push({"x":x,"y":app.value});
		avg.push({"x":x,"y":weekAverage});	
		future.push({"x":x,"y":(b1*count + b0)});
		count++;
	});
	
	seriesData.push({"name":"Trend : "+parseInt(b1)+" (Future 1 Week Value : "+ parseInt(metrics.future15)+")","data":future,"color":"#D91A4A"});
	seriesData.push({"name":"Average Response Times","data":data,"color":"#4682B4"});
	seriesData.push({"name":"Average : "+parseInt(weekAverage),"data":avg,"color":"#73C03A"});
	
	var graph = new Rickshaw.Graph( {
		element: document.querySelector("#chart"),
		width: 1200,
		height: 400,
		renderer: 'line',
		series: seriesData
	} );
	
	var unit = {}
unit.formatTime = function(d) {
  return d.toUTCString().match(/(\d+:\d+):/)[1];
};
unit.formatter = function(d) { return this.formatTime(d)};
unit.name = "day";
unit.seconds = 86400;
var xAxis = new Rickshaw.Graph.Axis.Time({
  graph: graph,
  timeUnit:unit,
  timeFixture: new Rickshaw.Fixtures.Time.Local()
});
	
	//var x_axis = new Rickshaw.Graph.Axis.Time( { 
	//	graph: graph,
	//	tickFormat: function(x){ return new Date(x).toLocateTimeString() }
	//} );
	
	var y_axis = new Rickshaw.Graph.Axis.Y( {
		graph: graph,
		orientation: 'left',
		tickFormat: Rickshaw.Fixtures.Number.formatKMBT,
		element: document.getElementById('y_axis'),
	} );	
	
	var legend = new Rickshaw.Graph.Legend( {
		element: document.querySelector('#legend'),
		graph: graph
	} );

	var hoverDetail = new Rickshaw.Graph.HoverDetail( {
		graph: graph
	} );
	
	graph.render();
	
});


</script>
</body>
</html>